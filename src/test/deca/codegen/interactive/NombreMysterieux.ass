	TSTO #17
	BOV stack_overflow_error
	ADDSP #7
; start main program
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Main program
; Beginning declaration of main variables:
; int nbEssais is defined and stored in 3(GB)
; int nbUtilisateur is defined and stored in 4(GB)
	LOAD #522, R2
	PUSH R2
	POP R2
	STORE R2, 5(GB)
; int nbOrdinateur is defined and stored in 5(GB)
	LOAD #1, R2
	PUSH R2
	POP R2
	STORE R2, 6(GB)
; int choix is defined and stored in 6(GB)
	LOAD #10, R2
	PUSH R2
	POP R2
	STORE R2, 7(GB)
; int nbMaxDeCoups is defined and stored in 7(GB)
; Beginning of main instructions:
while_14:
	LOAD 6(GB), R2
	PUSH R2
	LOAD #1, R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SEQ R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ endWhile_14
	LOAD #1, R2
	PUSH R2
	POP R2
	STORE R2, 3(GB)
	PUSH R2
	SUBSP #1
	WSTR "J'ai choisi un nombre entre 1 et 1000. Trouvez le en 10 essais ! "
	WNL
	WSTR "Entrez un nombre: "
	RINT
	PUSH R1
	POP R2
	STORE R2, 4(GB)
	PUSH R2
	SUBSP #1
while_24:
	LOAD 4(GB), R2
	PUSH R2
	LOAD 5(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SLT R2
	PUSH R2
	POP R2
	CMP #1, R2
	BEQ or_true_1
	LOAD 4(GB), R2
	PUSH R2
	LOAD 5(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SGT R2
	PUSH R2
	POP R2
	CMP #1, R2
	BEQ or_true_1
	BRA or_end_1
or_true_1:
	LOAD #1, R2
or_end_1:
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ and_false_1
	LOAD 3(GB), R2
	PUSH R2
	LOAD 7(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SLT R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ and_false_1
	BRA and_end_1
and_false_1:
	LOAD #0, R2
and_end_1:
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ endWhile_24
	LOAD 4(GB), R2
	PUSH R2
	LOAD 5(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SLT R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ else_1
	WSTR "Essai #"
	LOAD 3(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR " Le nombre choisi est trop petit: "
	WNL
	BRA endLabel_1
else_1:
	WSTR "Essai #"
	LOAD 3(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR "  Le nombre choisi est trop grand: "
	WNL
endLabel_1:
	WSTR "Entrez un nombre: "
	RINT
	PUSH R1
	POP R2
	STORE R2, 4(GB)
	PUSH R2
	SUBSP #1
	LOAD 3(GB), R2
	PUSH R2
	LOAD #1, R2
	PUSH R2
	POP R3
	POP R2
	ADD R3, R2
	PUSH R2
	POP R2
	STORE R2, 3(GB)
	PUSH R2
	SUBSP #1
	BRA while_24
endWhile_24:
	LOAD 3(GB), R2
	PUSH R2
	LOAD 7(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SEQ R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ else_2
	LOAD 4(GB), R2
	PUSH R2
	LOAD 5(GB), R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SEQ R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ else_3
	WSTR "Bravo vous avez trouve le nombre "
	LOAD 5(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR " apres "
	LOAD 3(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR " essai(s)"
	WNL
	BRA endLabel_3
else_3:
	WSTR "Desole vous avez epuisez votre nombre d'essais "
	WNL
endLabel_3:
	BRA endLabel_2
else_2:
	WSTR "Bravo vous avez trouve le nombre "
	LOAD 5(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR " apres "
	LOAD 3(GB), R2
	PUSH R2
	POP R1
	WINT
	WSTR " essai(s)"
	WNL
endLabel_2:
	WSTR "Voulez vous recommencer(1/0)?   "
	RINT
	PUSH R1
	POP R2
	STORE R2, 6(GB)
	PUSH R2
	SUBSP #1
	BRA while_14
endWhile_14:
	LOAD 6(GB), R2
	PUSH R2
	LOAD #0, R2
	PUSH R2
	POP R3
	POP R2
	CMP R3, R2
	SEQ R2
	PUSH R2
	POP R2
	CMP #0, R2
	BEQ endLabel_4
	WSTR "Au revoir!  "
	WNL
endLabel_4:
	HALT
; End main program
; Method codes of classes
; -------Object-------
init.Object:
	RTS
code.Object.equals:
	TSTO #2
	BOV stack_overflow_error
	PUSH R2
	PUSH R3
	LOAD -2(LB), R2
	LOAD -3(LB), R3
	CMP R3, R2
	SEQ R0
; Restauration des registres
	POP R3
	POP R2
	RTS
; Messages d'erreurs
overflow_error:
	WSTR "Error: Overflow during arithmetic operation"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
dereferencement.null:
	WSTR "Error : dereferencement de null"
	WNL
	ERROR
divide_by_zero:
	WSTR "Error : you divided by zero"
	WNL
	ERROR
; end main program
