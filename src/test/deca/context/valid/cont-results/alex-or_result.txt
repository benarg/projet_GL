DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:48) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:46) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:52) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:35) - verify Main: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:50) - verify Main: end
`> [13, 0] Program
   +> [13, 0] ListDeclClass [List with 0 elements]
   `> [13, 0] Main
      +> [14, 4] ListDeclVar [List with 0 elements]
      `> [14, 4] ListInst [List with 4 elements]
         []> [14, 4] IfThenElse
         ||  +> [14, 9] Or
         ||  |  type: boolean
         ||  |  +> [14, 9] BooleanLiteral (false)
         ||  |  |  type: boolean
         ||  |  `> [14, 18] BooleanLiteral (false)
         ||  |     type: boolean
         ||  +> [15, 8] ListInst [List with 1 elements]
         ||  |  []> [15, 8] Println
         ||  |      `> [15, 16] ListExpr [List with 1 elements]
         ||  |         []> [15, 16] StringLiteral (ERROR: false or false)
         ||  |             type: string
         ||  `> [17, 4] ListInst [List with 1 elements]
         ||     []> [18, 8] Println
         ||         `> [18, 16] ListExpr [List with 1 elements]
         ||            []> [18, 16] StringLiteral (SUCCESS: false or false)
         ||                type: string
         []> [21, 4] IfThenElse
         ||  +> [21, 9] Or
         ||  |  type: boolean
         ||  |  +> [21, 9] BooleanLiteral (false)
         ||  |  |  type: boolean
         ||  |  `> [21, 18] BooleanLiteral (true)
         ||  |     type: boolean
         ||  +> [22, 8] ListInst [List with 1 elements]
         ||  |  []> [22, 8] Println
         ||  |      `> [22, 16] ListExpr [List with 1 elements]
         ||  |         []> [22, 16] StringLiteral (SUCCESS: false or true)
         ||  |             type: string
         ||  `> [24, 4] ListInst [List with 1 elements]
         ||     []> [25, 8] Println
         ||         `> [25, 16] ListExpr [List with 1 elements]
         ||            []> [25, 16] StringLiteral (ERROR: false or true)
         ||                type: string
         []> [28, 4] IfThenElse
         ||  +> [28, 9] Or
         ||  |  type: boolean
         ||  |  +> [28, 9] BooleanLiteral (true)
         ||  |  |  type: boolean
         ||  |  `> [28, 17] BooleanLiteral (false)
         ||  |     type: boolean
         ||  +> [29, 8] ListInst [List with 1 elements]
         ||  |  []> [29, 8] Println
         ||  |      `> [29, 16] ListExpr [List with 1 elements]
         ||  |         []> [29, 16] StringLiteral (SUCCESS: true  or false)
         ||  |             type: string
         ||  `> [31, 4] ListInst [List with 1 elements]
         ||     []> [32, 8] Println
         ||         `> [32, 16] ListExpr [List with 1 elements]
         ||            []> [32, 16] StringLiteral (ERROR: true  or false)
         ||                type: string
         []> [35, 4] IfThenElse
             +> [35, 9] Or
             |  type: boolean
             |  +> [35, 9] BooleanLiteral (true)
             |  |  type: boolean
             |  `> [35, 17] BooleanLiteral (true)
             |     type: boolean
             +> [36, 8] ListInst [List with 1 elements]
             |  []> [36, 8] Println
             |      `> [36, 16] ListExpr [List with 1 elements]
             |         []> [36, 16] StringLiteral (SUCCESS: true  or true)
             |             type: string
             `> [38, 4] ListInst [List with 1 elements]
                []> [39, 8] Println
                    `> [39, 16] ListExpr [List with 1 elements]
                       []> [39, 16] StringLiteral (ERROR: true  or true)
                           type: string
