DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:48) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:46) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:52) - verify listClass: end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:35) - verify Main: start
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:50) - verify Main: end
`> [10, 0] Program
   +> [10, 0] ListDeclClass [List with 1 elements]
   |  []> [10, 0] DeclClass
   |      +> [10, 6] Identifier (A)
   |      |  definition: type defined at [10, 6], type=A
   |      +> [10, 8] Identifier (Object)
   |      |  definition: type (builtin), type=Object
   |      +> [11, 4] ListDeclField [List with 0 elements]
   |      `> [11, 4] ListDeclMethod [List with 1 elements]
   |         []> [11, 4] DeclMethod
   |             +> [11, 4] Identifier (boolean)
   |             |  definition: type (builtin), type=boolean
   |             +> [11, 12] Identifier (asmMethod)
   |             |  definition: method defined at [11, 4], type=boolean
   |             +> [11, 22] ListDeclParam [List with 0 elements]
   |             `> [12, 0] MethodBodyASM
   `> [18, 0] Main
      +> [19, 4] ListDeclVar [List with 0 elements]
      `> [19, 4] ListInst [List with 1 elements]
         []> [19, 4] IfThenElse
             +> [19, 8] MethodCall
             |  type: boolean
             |  +> [19, 9] New
             |  |  type: A
             |  |  `> [19, 13] Identifier (A)
             |  |     definition: type defined at [10, 6], type=A
             |  +> [19, 18] Identifier (asmMethod)
             |  |  definition: method defined at [11, 4], type=boolean
             |  `> [19, 28] ListExpr [List with 0 elements]
             +> [20, 8] ListInst [List with 1 elements]
             |  []> [20, 8] Println
             |      `> [20, 16] ListExpr [List with 1 elements]
             |         []> [20, 16] StringLiteral (SUCCESS)
             |             type: string
             `> [21, 6] ListInst [List with 1 elements]
                []> [22, 8] Println
                    `> [22, 16] ListExpr [List with 1 elements]
                       []> [22, 16] StringLiteral (FAIL)
                           type: string
